{"remainingRequest":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\terme\\Documents\\GitHub\\kanban\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\src\\store\\index.js","mtime":1753121979304},{"path":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1752807269900},{"path":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\node_modules\\babel-loader\\lib\\index.js","mtime":1752807269607}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","Vuex","initialKanbanData","use","Store","state","boards","allCards","boardCards","card","title","description","status","comments","isLoadingBoards","boardsError","mutations","SET_BOARDS","data","SET_ALL_CARDS","SET_BOARD_CARDS","SET_CURRENT_CARD","DELETE_BOARD","boardIdToDelete","filter","board","id","boardId","length","SET_LOADING_BOARDS","SET_BOARDS_ERROR","error","ADD_NEW_BOARD","newBoard","maxBoardId","reduce","max","Math","maxCardId","push","ADD_NEW_CARD","newCard","UPDATE_CARD_IN_BOARD","updatedCard","allCardsIndex","findIndex","splice","boardCardsIndex","DELETE_CARD_FROM_BOARD","cardId","actions","fetchKanbanData","commit","cards","console","log","addBoard","addCard","newCardData","updateExistingCard","updatedCardData","deleteExistingCard","deleteBoard","fetchBoardCards","cardsForBoard","fetchCardDetail","find","c","cardComments","comment","cardWithComments","warn","Error","getters","allBoards","currentCard","getCardsForBoard","modules"],"sources":["C:/Users/terme/Documents/GitHub/kanban/src/store/index.js"],"sourcesContent":["// src/store/index.js\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport { initialKanbanData } from '../db/initialKanbanData.js'; // FIX: Corrected import path\r\n// REMOVED: import BoardService from '@/services/BoardService'; // No longer needed for Option A\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    boards: [],\r\n    allCards: [], // New state to hold all cards\r\n    boardCards: [], // This will still hold cards specific to the currently viewed board\r\n    card: {\r\n      title: '',\r\n      description: '',\r\n      status: '',\r\n      comments: []\r\n    },\r\n    isLoadingBoards: false,\r\n    boardsError: null,\r\n  },\r\n  mutations: {\r\n    SET_BOARDS(state, data) {\r\n      state.boards = data;\r\n    },\r\n    SET_ALL_CARDS(state, data) { // New mutation to set all cards\r\n      state.allCards = data;\r\n    },\r\n    SET_BOARD_CARDS(state, data) {\r\n      state.boardCards = data;\r\n    },\r\n    SET_CURRENT_CARD(state, data) {\r\n      state.card = data;\r\n    },\r\n    DELETE_BOARD(state, boardIdToDelete) {\r\n      state.boards = state.boards.filter((board) => {\r\n        return board.id !== boardIdToDelete;\r\n      });\r\n      state.allCards = state.allCards.filter(card => card.boardId !== boardIdToDelete);\r\n      if (state.boardCards.length > 0 && state.boardCards[0].boardId === boardIdToDelete) {\r\n        state.boardCards = [];\r\n      }\r\n    },\r\n    SET_LOADING_BOARDS(state, status) {\r\n      state.isLoadingBoards = status;\r\n    },\r\n    SET_BOARDS_ERROR(state, error) {\r\n      state.boardsError = error;\r\n    },\r\n    ADD_NEW_BOARD(state, newBoard) {\r\n      const maxBoardId = state.boards.reduce((max, board) => Math.max(max, board.id), 0);\r\n      const maxCardId = state.allCards.reduce((max, card) => Math.max(max, card.id), 0);\r\n      newBoard.id = Math.max(maxBoardId, maxCardId) + 1;\r\n      state.boards.push(newBoard);\r\n    },\r\n    ADD_NEW_CARD(state, newCard) {\r\n      const maxBoardId = state.boards.reduce((max, board) => Math.max(max, board.id), 0);\r\n      const maxCardId = state.allCards.reduce((max, card) => Math.max(max, card.id), 0);\r\n      newCard.id = Math.max(maxBoardId, maxCardId) + 1;\r\n      state.allCards.push(newCard);\r\n    },\r\n    UPDATE_CARD_IN_BOARD(state, updatedCard) {\r\n        // Find and update in allCards\r\n        const allCardsIndex = state.allCards.findIndex(card => card.id === updatedCard.id);\r\n        if (allCardsIndex !== -1) {\r\n            state.allCards.splice(allCardsIndex, 1, updatedCard);\r\n        }\r\n        // Update in boardCards if it's the currently displayed board\r\n        const boardCardsIndex = state.boardCards.findIndex(card => card.id === updatedCard.id);\r\n        if (boardCardsIndex !== -1) {\r\n            state.boardCards.splice(boardCardsIndex, 1, updatedCard);\r\n        }\r\n    },\r\n    DELETE_CARD_FROM_BOARD(state, { boardId, cardId }) {\r\n        // Filter out from allCards\r\n        state.allCards = state.allCards.filter(card => card.id !== cardId);\r\n        // Filter out from boardCards if it's the currently displayed board\r\n        state.boardCards = state.boardCards.filter(card => card.id !== cardId);\r\n    },\r\n  },\r\n  actions: {\r\n    // FIX: This action now directly uses initialKanbanData\r\n    async fetchKanbanData({ commit }) {\r\n      commit('SET_LOADING_BOARDS', true);\r\n      commit('SET_BOARDS_ERROR', null);\r\n      try {\r\n        // Directly commit data from initialKanbanData\r\n        commit('SET_BOARDS', initialKanbanData.boards);\r\n        commit('SET_ALL_CARDS', initialKanbanData.cards);\r\n        console.log(\"Kanban data loaded successfully from initialKanbanData:\", initialKanbanData.boards, initialKanbanData.cards); // Added console log\r\n      } catch (error) {\r\n        console.error(\"Error loading Kanban data from initialKanbanData:\", error);\r\n        commit('SET_BOARDS_ERROR', 'Failed to load Kanban data from local source.');\r\n      } finally {\r\n        commit('SET_LOADING_BOARDS', false);\r\n      }\r\n    },\r\n\r\n    // FIX: These actions now directly commit mutations without BoardService\r\n    addBoard({ commit }, newBoard) {\r\n      commit('ADD_NEW_BOARD', newBoard);\r\n      console.log(\"New board added locally:\", newBoard);\r\n    },\r\n    addCard({ commit }, newCardData) {\r\n      commit('ADD_NEW_CARD', newCardData);\r\n      console.log(\"New card added locally:\", newCardData);\r\n    },\r\n    updateExistingCard({ commit }, updatedCardData) {\r\n      commit('UPDATE_CARD_IN_BOARD', updatedCardData);\r\n      console.log(\"Card updated locally:\", updatedCardData);\r\n    },\r\n    deleteExistingCard({ commit }, { cardId, boardId }) {\r\n      commit('DELETE_CARD_FROM_BOARD', { boardId, cardId });\r\n      console.log(`Card ${cardId} deleted locally from board ${boardId}.`);\r\n    },\r\n    deleteBoard({ commit }, boardId) {\r\n      commit('DELETE_BOARD', boardId);\r\n      console.log(`Board ${boardId} deleted locally.`);\r\n    },\r\n\r\n    // Action to fetch cards for a specific board (called from CardsList.vue)\r\n    fetchBoardCards({ commit, state }, boardId) {\r\n        const cardsForBoard = state.allCards.filter(card => card.boardId === boardId);\r\n        commit('SET_BOARD_CARDS', cardsForBoard);\r\n    },\r\n    // Action to fetch a specific card (called from CardDetails.vue and CardForm.vue)\r\n    fetchCardDetail({ commit, state }, cardId) {\r\n        const card = state.allCards.find(c => c.id === cardId);\r\n        if (card) {\r\n            // Ensure initialKanbanData.comments exists before filtering\r\n            const cardComments = initialKanbanData.comments ? initialKanbanData.comments.filter(comment => comment.cardId === cardId) : [];\r\n            const cardWithComments = { ...card, comments: cardComments };\r\n            commit('SET_CURRENT_CARD', cardWithComments);\r\n        } else {\r\n            console.warn(`Card with ID ${cardId} not found.`);\r\n            commit('SET_CURRENT_CARD', null);\r\n            throw new Error('Card not found');\r\n        }\r\n    }\r\n  },\r\n  getters: {\r\n    allBoards: state => state.boards,\r\n    isLoadingBoards: state => state.isLoadingBoards,\r\n    boardsError: state => state.boardsError,\r\n    currentCard: state => state.card,\r\n    getCardsForBoard: (state) => (boardId) => {\r\n        return state.allCards.filter(card => card.boardId === boardId);\r\n    }\r\n  },\r\n  modules: {}\r\n});"],"mappings":"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","ignoreList":[]}]}