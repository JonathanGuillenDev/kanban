{"remainingRequest":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/babel-loader/lib/index.js!/Users/Jonathan/Documents/GitHub/kanban/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Jonathan/Documents/GitHub/kanban/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jonathan/Documents/GitHub/kanban/src/components/CardsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Jonathan/Documents/GitHub/kanban/src/components/CardsList.vue","mtime":1617676642000},{"path":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGJvYXJkc1NlcnZpY2UgZnJvbSAiLi4vc2VydmljZXMvQm9hcmRTZXJ2aWNlIjsKaW1wb3J0IEJvYXJkQ29sdW1uIGZyb20gIkAvY29tcG9uZW50cy9Cb2FyZENvbHVtbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiY2FyZHMtbGlzdCIsCiAgY29tcG9uZW50czogewogICAgQm9hcmRDb2x1bW46IEJvYXJkQ29sdW1uCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGl0bGU6ICIiLAogICAgICBib2FyZElkOiAwLAogICAgICBpc0xvYWRpbmc6IHRydWUsCiAgICAgIGVycm9yTXNnOiAiIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJldHJpZXZlQ2FyZHM6IGZ1bmN0aW9uIHJldHJpZXZlQ2FyZHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBib2FyZHNTZXJ2aWNlLmdldENhcmRzKHRoaXMuYm9hcmRJZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy50aXRsZSA9IHJlc3BvbnNlLmRhdGEudGl0bGU7CgogICAgICAgIF90aGlzLiRzdG9yZS5jb21taXQoIlNFVF9CT0FSRF9DQVJEUyIsIHJlc3BvbnNlLmRhdGEuY2FyZHMpOwoKICAgICAgICBfdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSB7CiAgICAgICAgICBhbGVydCgiQm9hcmQgY2FyZHMgbm90IGF2YWlsYWJsZS4gVGhpcyBib2FyZCBtYXkgaGF2ZSBiZWVuIGRlbGV0ZWQgb3IgeW91IGhhdmUgZW50ZXJlZCBhbiBpbnZhbGlkIGJvYXJkIElELiIpOwoKICAgICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCgiLyIpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlQm9hcmQ6IGZ1bmN0aW9uIGRlbGV0ZUJvYXJkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGlmIChjb25maXJtKCJEZWxldGluZyB0aGlzIGJvYXJkIGRlbGV0ZXMgYWxsIGNhcmRzLiBUaGVyZSdzIG5vIHVuZG8uIEFyZSB5b3Ugc3VyZT8iKSkgewogICAgICAgIGJvYXJkc1NlcnZpY2UuZGVsZXRlQm9hcmQodGhpcy5ib2FyZElkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgIGFsZXJ0KCJCb2FyZCBzdWNjZXNzZnVsbHkgZGVsZXRlZC4iKTsKCiAgICAgICAgICAgIF90aGlzMi4kc3RvcmUuY29tbWl0KCJERUxFVEVfQk9BUkQiLCBfdGhpczIuYm9hcmRJZCk7CgogICAgICAgICAgICBfdGhpczIuJHJvdXRlci5wdXNoKCIvIik7CiAgICAgICAgICB9CiAgICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2UpIHsKICAgICAgICAgICAgX3RoaXMyLmVycm9yTXNnID0gIkVycm9yIGRlbGV0aW5nIGJvYXJkLiBSZXNwb25zZSB3YXMgIiArIGVycm9yLnJlc3BvbnNlLnN0YXR1c1RleHQ7CiAgICAgICAgICB9IGVsc2UgaWYgKGVycm9yLnJlcXVlc3QpIHsKICAgICAgICAgICAgX3RoaXMyLmVycm9yTXNnID0gIkVycm9yIGRlbGV0aW5nIGJvYXJkLiBTZXJ2ZXIgY291bGRuJ3QgYmUgcmVhY2hlZC4iOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXMyLmVycm9yTXNnID0gIkVycm9yIGRlbGV0aW5nIGJvYXJkLiBSZXF1ZXN0IGNvdWxkIG5vdCBiZSBjcmVhdGVkLiI7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmJvYXJkSWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQ7CiAgICB0aGlzLnJldHJpZXZlQ2FyZHMoKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwbGFubmVkOiBmdW5jdGlvbiBwbGFubmVkKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYm9hcmRDYXJkcy5maWx0ZXIoZnVuY3Rpb24gKGNhcmQpIHsKICAgICAgICByZXR1cm4gY2FyZC5zdGF0dXMgPT09ICJQbGFubmVkIjsKICAgICAgfSk7CiAgICB9LAogICAgaW5Qcm9ncmVzczogZnVuY3Rpb24gaW5Qcm9ncmVzcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmJvYXJkQ2FyZHMuZmlsdGVyKGZ1bmN0aW9uIChjYXJkKSB7CiAgICAgICAgcmV0dXJuIGNhcmQuc3RhdHVzID09PSAiSW4gUHJvZ3Jlc3MiOwogICAgICB9KTsKICAgIH0sCiAgICBjb21wbGV0ZWQ6IGZ1bmN0aW9uIGNvbXBsZXRlZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmJvYXJkQ2FyZHMuZmlsdGVyKGZ1bmN0aW9uIChjYXJkKSB7CiAgICAgICAgcmV0dXJuIGNhcmQuc3RhdHVzID09PSAiQ29tcGxldGVkIjsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["CardsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,aAAA,MAAA,0BAAA;AACA,OAAA,WAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,CAFA;AAGA,MAAA,SAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,MAAA,aAAA,CACA,QADA,CACA,KAAA,OADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,IAAA,CAAA,KAAA;;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,OANA,WAOA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,UAAA,KAAA,CACA,sGADA,CAAA;;AAGA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,OAdA;AAeA,KAjBA;AAkBA,IAAA,WAlBA,yBAkBA;AAAA;;AACA,UAAA,OAAA,CAAA,uEAAA,CAAA,EAAA;AACA,QAAA,aAAA,CAAA,WAAA,CAAA,KAAA,OAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,6BAAA,CAAA;;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA,MAAA,CAAA,OAAA;;AACA,YAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA,SAPA,WAQA,UAAA,KAAA,EAAA;AACA,cAAA,KAAA,CAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,wCAAA,KAAA,CAAA,QAAA,CAAA,UAAA;AACA,WAFA,MAEA,IAAA,KAAA,CAAA,OAAA,EAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,mDAAA;AACA,WAFA,MAGA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,qDAAA;AACA;AACA,SAjBA;AAkBA;AAEA;AAxCA,GAbA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,OAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,SAAA,aAAA;AACA,GA1DA;AA2DA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CACA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,MAAA,KAAA,SAAA;AAAA,OADA,CAAA;AAGA,KALA;AAMA,IAAA,UANA,wBAMA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CACA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,MAAA,KAAA,aAAA;AAAA,OADA,CAAA;AAGA,KAVA;AAWA,IAAA,SAXA,uBAWA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CACA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,MAAA,KAAA,WAAA;AAAA,OADA,CAAA;AAGA;AAfA;AA3DA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"header\">\n      <h1>{{ title }}</h1>\n      <router-link\n        tag=\"button\"\n        class=\"btn addNewCard\"\n        :to=\"{ name: 'AddCard', params: {boardID: this.boardId} }\"\n        v-if=\"!isLoading\"\n      >Add New Card</router-link>\n      <button\n        class=\"btn btn-cancel deleteBoard\"\n        v-if=\"!isLoading\"\n        v-on:click=\"deleteBoard\"\n      >Delete Board</button>\n    </div>\n    <div class=\"loading\" v-if=\"isLoading\">\n      <img src=\"../assets/ping_pong_loader.gif\" />\n    </div>\n    <div v-else>\n      <div class=\"status-message error\" v-show=\"errorMsg !== ''\">{{errorMsg}}</div>\n      <div class=\"boards\">\n        <board-column title=\"Planned\" :cards=\"planned\" :boardID=\"this.boardId\" />\n        <board-column title=\"In Progress\" :cards=\"inProgress\" :boardID=\"this.boardId\" />\n        <board-column title=\"Completed\" :cards=\"completed\" :boardID=\"this.boardId\" />\n      </div>\n    </div>\n    <div class=\"board-actions\" v-if=\"!isLoading\">\n      <router-link to=\"/\">Back to Boards</router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport boardsService from \"../services/BoardService\";\nimport BoardColumn from \"@/components/BoardColumn\";\n\nexport default {\n  name: \"cards-list\",\n  components: {\n    BoardColumn\n  },\n  data() {\n    return {\n      title: \"\",\n      boardId: 0,\n      isLoading: true,\n      errorMsg: \"\"\n    };\n  },\n  methods: {\n    retrieveCards() {\n      boardsService\n        .getCards(this.boardId)\n        .then(response => {\n          this.title = response.data.title;\n          this.$store.commit(\"SET_BOARD_CARDS\", response.data.cards);\n          this.isLoading = false;\n        })\n        .catch(error => {\n          if (error.response && error.response.status === 404) {\n            alert(\n              \"Board cards not available. This board may have been deleted or you have entered an invalid board ID.\"\n            );\n            this.$router.push(\"/\");\n          }\n        });\n    },\n    deleteBoard() {\n      if (confirm(\"Deleting this board deletes all cards. There's no undo. Are you sure?\")){\n        boardsService.deleteBoard(this.boardId)\n        .then(response =>{\n          if (response.status===200){\n            alert(\"Board successfully deleted.\");\n            this.$store.commit(\"DELETE_BOARD\",this.boardId);\n            this.$router.push(\"/\");\n          }\n        })\n        .catch(error=>{\n          if (error.response){\n            this.errorMsg = \"Error deleting board. Response was \"+error.response.statusText;\n          } else if (error.request){\n            this.errorMsg = \"Error deleting board. Server couldn't be reached.\"\n          }\n          else {\n            this.errorMsg = \"Error deleting board. Request could not be created.\"\n          }\n        });\n      }\n      \n    }\n  },\n  created() {\n    this.boardId = this.$route.params.id;\n    this.retrieveCards();\n  },\n  computed: {\n    planned() {\n      return this.$store.state.boardCards.filter(\n        card => card.status === \"Planned\"\n      );\n    },\n    inProgress() {\n      return this.$store.state.boardCards.filter(\n        card => card.status === \"In Progress\"\n      );\n    },\n    completed() {\n      return this.$store.state.boardCards.filter(\n        card => card.status === \"Completed\"\n      );\n    }\n  }\n};\n</script>\n\n<style>\n.boards {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n}\n.board-actions {\n  text-align: center;\n  padding: 20px 0;\n}\n.board-actions a:link,\n.board-actions a:visited {\n  color: blue;\n  text-decoration: none;\n}\n.board-actions a:hover {\n  text-decoration: underline;\n}\n.btn.addNewCard {\n  color: #fff;\n  background-color: #508ca8;\n  border-color: #508ca8;\n}\n.header {\n  display: flex;\n  align-items: center;\n}\n.header h1 {\n  flex-grow: 1;\n}\n</style>\n"],"sourceRoot":"src/components"}]}