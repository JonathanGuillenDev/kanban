{"remainingRequest":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/src/components/CardDetail.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/src/components/CardDetail.vue","mtime":1617676642000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJ0bi5lZGl0Q2FyZCB7CiAgY29sb3I6ICNmZmY7CiAgYmFja2dyb3VuZC1jb2xvcjogIzUwOGNhODsKICBib3JkZXItY29sb3I6ICM1MDhjYTg7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQouYnRuLmRlbGV0ZUNhcmQgewogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQtY29sb3I6ICNlZjAzMWE7CiAgYm9yZGVyLWNvbG9yOiAjZWYwMzFhOwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0K"},{"version":3,"sources":["CardDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CardDetail.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"loading\" v-if=\"isLoading\">\n      <img src=\"../assets/ping_pong_loader.gif\" />\n    </div>\n    <div v-else>\n      <h1>{{ card.title }}</h1>\n      <p>{{ card.description }}</p>\n      <router-link\n        tag=\"button\"\n        :to=\"{ name: 'EditCard', params: {cardID: $route.params.cardID} }\"\n        class=\"btn editCard\"\n      >Edit Card</router-link>\n      <button class=\"btn deleteCard\" v-on:click=\"deleteCard\">Delete Card</button>\n      <div class=\"status-message error\" v-show=\"errorMsg !== ''\">{{errorMsg}}</div>\n      <comments-list :comments=\"card.comments\" />\n    </div>\n\n    <div class=\"board-actions\" v-if=\"!isLoading\">\n      <router-link :to=\"{ name: 'Board', params: { id: $route.params.boardID } }\">Back to Board</router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport boardsService from \"../services/BoardService\";\nimport CommentsList from \"@/components/CommentsList\";\n\nexport default {\n  name: \"card-detail\",\n  components: {\n    CommentsList\n  },\n  data() {\n    return {\n      isLoading: true,\n      errorMsg: \"\",\n    };\n  },\n  methods: {\n    retrieveCard() {\n      boardsService\n        .getCard(this.$route.params.cardID)\n        .then(response => {\n          this.$store.commit(\"SET_CURRENT_CARD\", response.data);\n          this.isLoading = false;\n        })\n        .catch(error => {\n          if (error.response && error.response.status === 404) {\n            alert(\n              \"Card not available. This card may have been deleted or you have entered an invalid card ID.\"\n            );\n            this.$router.push(\"/\");\n          }\n        });\n    },\n    deleteCard() {\n      if (\n        confirm(\n          \"Are you sure you want to delete this card? This action cannot be undone.\"\n        )\n      ) {\n        boardsService\n          .deleteCard(this.card.id)\n          .then(response => {\n            if (response.status === 200) {\n              alert(\"Card successfully deleted\");\n              this.$router.push(`/board/${this.card.boardId}`);\n            }\n          })\n          .catch(error => {\n            if (error.response) {\n              this.errorMsg =\n                \"Error deleting card. Response received was '\" +\n                error.response.statusText +\n                \"'.\";\n            } else if (error.request) {\n              this.errorMsg =\n                \"Error deleting card. Server could not be reached.\";\n            } else {\n              this.errorMsg =\n                \"Error deleting card. Request could not be created.\";\n            }\n          });\n      }\n    },\n  },\n  created() {\n    this.retrieveCard();\n  },\n  computed: {\n    card() {\n      return this.$store.state.card;\n    }\n  }\n};\n</script>\n\n<style>\n.btn.editCard {\n  color: #fff;\n  background-color: #508ca8;\n  border-color: #508ca8;\n  margin-bottom: 10px;\n}\n.btn.deleteCard {\n  color: #fff;\n  background-color: #ef031a;\n  border-color: #ef031a;\n  margin-bottom: 10px;\n}\n</style>\n"]}]}