{"remainingRequest":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/src/components/CardForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/src/components/CardForm.vue","mtime":1617676642000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/17_Web_Services_POST/lecture-final/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYXJkRm9ybSB7CiAgcGFkZGluZzogMTBweDsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9Ci5mb3JtLWdyb3VwIHsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIG1hcmdpbi10b3A6IDEwcHg7Cn0KbGFiZWwgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW4tYm90dG9tOiAwLjVyZW07Cn0KLmZvcm0tY29udHJvbCB7CiAgZGlzcGxheTogYmxvY2s7CiAgd2lkdGg6IDgwJTsKICBoZWlnaHQ6IDMwcHg7CiAgcGFkZGluZzogMC4zNzVyZW0gMC43NXJlbTsKICBmb250LXNpemU6IDFyZW07CiAgZm9udC13ZWlnaHQ6IDQwMDsKICBsaW5lLWhlaWdodDogMS41OwogIGNvbG9yOiAjNDk1MDU3OwogIGJvcmRlcjogMXB4IHNvbGlkICNjZWQ0ZGE7CiAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTsKfQp0ZXh0YXJlYS5mb3JtLWNvbnRyb2wgewogIGhlaWdodDogNzVweDsKICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsKfQpzZWxlY3QuZm9ybS1jb250cm9sIHsKICB3aWR0aDogMjAlOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDEwcHggMjBweCAxMHB4IDEwcHg7Cn0KLmJ0bi1zdWJtaXQgewogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQtY29sb3I6ICMwMDYyY2M7CiAgYm9yZGVyLWNvbG9yOiAjMDA1Y2JmOwp9Ci5idG4tY2FuY2VsIHsKICBjb2xvcjogI2ZmZjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMzNTQ1OwogIGJvcmRlci1jb2xvcjogI2RjMzU0NTsKfQouc3RhdHVzLW1lc3NhZ2UgewogIGRpc3BsYXk6IGJsb2NrOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBmb250LXdlaWdodDogYm9sZDsKICBmb250LXNpemU6IDFyZW07CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHBhZGRpbmc6IDEwcHg7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQouc3RhdHVzLW1lc3NhZ2Uuc3VjY2VzcyB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzkwZWU5MDsKfQouc3RhdHVzLW1lc3NhZ2UuZXJyb3IgewogIGJhY2tncm91bmQtY29sb3I6ICNmMDgwODA7Cn0K"},{"version":3,"sources":["CardForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CardForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <form v-on:submit.prevent=\"submitForm\" class=\"cardForm\">\n    <div class=\"status-message error\" v-show=\"errorMsg !== ''\">{{errorMsg}}</div>\n    <div class=\"form-group\">\n      <label for=\"title\">Title:</label>\n      <input id=\"title\" type=\"text\" class=\"form-control\" v-model=\"card.title\" autocomplete=\"off\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"tag\">Tag:</label>\n      <select id=\"tag\" class=\"form-control\" v-model=\"card.tag\">\n        <option value=\"Feature Request\">Feature Request</option>\n        <option value=\"Design\">Design</option>\n        <option value=\"Q&A\">Q&A</option>\n      </select>\n      <label for=\"status\">Status:</label>\n      <select id=\"tag\" class=\"form-control\" v-model=\"card.status\">\n        <option value=\"Planned\">Planned</option>\n        <option value=\"In Progress\">In Progress</option>\n        <option value=\"Completed\">Completed</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description:</label>\n      <textarea id=\"description\" class=\"form-control\" v-model=\"card.description\"></textarea>\n    </div>\n    <button class=\"btn btn-submit\">Submit</button>\n    <button class=\"btn btn-cancel\" v-on:click.prevent=\"cancelForm\" type=\"cancel\">Cancel</button>\n  </form>\n</template>\n\n<script>\nimport boardsService from \"../services/BoardService\";\nimport moment from \"moment\";\n\nexport default {\n  name: \"card-form\",\n  props: {\n    cardID: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      card: {\n        title: \"\",\n        description: \"\",\n        status: \"Planned\",\n        tag: \"\",\n        avatar: \"\",\n        date: null\n      },\n      errorMsg: \"\"\n    };\n  },\n  methods: {\n    submitForm() {\n      const newCard = {\n        boardId: Number(this.$route.params.boardID),\n        title: this.card.title,\n        description: this.card.description,\n        status: this.card.status,\n        tag: this.card.tag,\n        avatar: \"https://randomuser.me/api/portraits/lego/1.jpg\",\n        date: moment().format(\"MMM Do YYYY\")\n      };\n\n      if (this.cardID === 0) {\n        // add\n        boardsService\n          .addCard(newCard)\n          .then(response => {\n            if (response.status === 201) {\n              this.$router.push(`/board/${newCard.boardId}`);\n            }\n          })\n          .catch(error => {\n            this.handleErrorResponse(error, \"adding\");\n          });\n      } else {\n        // update\n        newCard.id = this.cardID;\n        newCard.avatar = this.card.avatar;\n        newCard.date = this.card.date;\n        boardsService\n          .updateCard(newCard)\n          .then(response => {\n            if (response.status === 200) {\n              this.$router.push(`/board/${newCard.boardId}`);\n            }\n          })\n          .catch(error => {\n            this.handleErrorResponse(error, \"updating\");\n          });\n      }\n    },\n    cancelForm() {\n      this.$router.push(`/board/${this.$route.params.boardID}`);\n    },\n    handleErrorResponse(error, verb) {\n      if (error.response) {\n        this.errorMsg =\n          \"Error \" + verb + \" card. Response received was '\" +\n          error.response.statusText +\n          \"'.\";\n      } else if (error.request) {\n        this.errorMsg =\n          \"Error \" + verb + \" card. Server could not be reached.\";\n      } else {\n        this.errorMsg =\n          \"Error \" + verb + \" card. Request could not be created.\";\n      }\n    }\n  },\n  created() {\n    if (this.cardID != 0) {\n      boardsService\n        .getCard(this.cardID)\n        .then(response => {\n          this.card = response.data;\n        })\n        .catch(error => {\n          if (error.response && error.response.status === 404) {\n            alert(\n              \"Card not available. This card may have been deleted or you have entered an invalid card ID.\"\n            );\n            this.$router.push(\"/\");\n          }\n        });\n    }\n  }\n};\n</script>\n\n\n<style>\n.cardForm {\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.form-group {\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\nlabel {\n  display: inline-block;\n  margin-bottom: 0.5rem;\n}\n.form-control {\n  display: block;\n  width: 80%;\n  height: 30px;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #495057;\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem;\n}\ntextarea.form-control {\n  height: 75px;\n  font-family: Arial, Helvetica, sans-serif;\n}\nselect.form-control {\n  width: 20%;\n  display: inline-block;\n  margin: 10px 20px 10px 10px;\n}\n.btn-submit {\n  color: #fff;\n  background-color: #0062cc;\n  border-color: #005cbf;\n}\n.btn-cancel {\n  color: #fff;\n  background-color: #dc3545;\n  border-color: #dc3545;\n}\n.status-message {\n  display: block;\n  border-radius: 5px;\n  font-weight: bold;\n  font-size: 1rem;\n  text-align: center;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.status-message.success {\n  background-color: #90ee90;\n}\n.status-message.error {\n  background-color: #f08080;\n}\n</style>\n"]}]}