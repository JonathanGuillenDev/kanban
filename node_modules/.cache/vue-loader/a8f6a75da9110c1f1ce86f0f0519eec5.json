{"remainingRequest":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\terme\\Documents\\GitHub\\kanban\\src\\components\\CardDetail.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\src\\components\\CardDetail.vue","mtime":1752807274615},{"path":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1752807269900},{"path":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\node_modules\\babel-loader\\lib\\index.js","mtime":1752807269607},{"path":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1752807269900},{"path":"C:\\Users\\terme\\Documents\\GitHub\\kanban\\node_modules\\vue-loader\\lib\\index.js","mtime":1752860046809}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYm9hcmRzU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9Cb2FyZFNlcnZpY2UiOw0KaW1wb3J0IENvbW1lbnRzTGlzdCBmcm9tICJAL2NvbXBvbmVudHMvQ29tbWVudHNMaXN0IjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiY2FyZC1kZXRhaWwiLA0KICBjb21wb25lbnRzOiB7DQogICAgQ29tbWVudHNMaXN0DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGlzTG9hZGluZzogdHJ1ZSwNCiAgICAgIGVycm9yTXNnOiAiIiwNCiAgICB9Ow0KICB9LA0KICBtZXRob2RzOiB7DQogICAgcmV0cmlldmVDYXJkKCkgew0KICAgICAgYm9hcmRzU2VydmljZQ0KICAgICAgICAuZ2V0Q2FyZCh0aGlzLiRyb3V0ZS5wYXJhbXMuY2FyZElEKQ0KICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJTRVRfQ1VSUkVOVF9DQVJEIiwgcmVzcG9uc2UuZGF0YSk7DQogICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsNCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKGVycm9yID0+IHsNCiAgICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2Uuc3RhdHVzID09PSA0MDQpIHsNCiAgICAgICAgICAgIGFsZXJ0KA0KICAgICAgICAgICAgICAiQ2FyZCBub3QgYXZhaWxhYmxlLiBUaGlzIGNhcmQgbWF5IGhhdmUgYmVlbiBkZWxldGVkIG9yIHlvdSBoYXZlIGVudGVyZWQgYW4gaW52YWxpZCBjYXJkIElELiINCiAgICAgICAgICAgICk7DQogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiLyIpOw0KICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgfSwNCiAgICBkZWxldGVDYXJkKCkgew0KICAgICAgaWYgKA0KICAgICAgICBjb25maXJtKA0KICAgICAgICAgICJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIHRoaXMgY2FyZD8gVGhpcyBhY3Rpb24gY2Fubm90IGJlIHVuZG9uZS4iDQogICAgICAgICkNCiAgICAgICkgew0KICAgICAgICBib2FyZHNTZXJ2aWNlDQogICAgICAgICAgLmRlbGV0ZUNhcmQodGhpcy5jYXJkLmlkKQ0KICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkgew0KICAgICAgICAgICAgICBhbGVydCgiQ2FyZCBzdWNjZXNzZnVsbHkgZGVsZXRlZCIpOw0KICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaChgL2JvYXJkLyR7dGhpcy5jYXJkLmJvYXJkSWR9YCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgfSkNCiAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gew0KICAgICAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7DQogICAgICAgICAgICAgIHRoaXMuZXJyb3JNc2cgPQ0KICAgICAgICAgICAgICAgICJFcnJvciBkZWxldGluZyBjYXJkLiBSZXNwb25zZSByZWNlaXZlZCB3YXMgJyIgKw0KICAgICAgICAgICAgICAgIGVycm9yLnJlc3BvbnNlLnN0YXR1c1RleHQgKw0KICAgICAgICAgICAgICAgICInLiI7DQogICAgICAgICAgICB9IGVsc2UgaWYgKGVycm9yLnJlcXVlc3QpIHsNCiAgICAgICAgICAgICAgdGhpcy5lcnJvck1zZyA9DQogICAgICAgICAgICAgICAgIkVycm9yIGRlbGV0aW5nIGNhcmQuIFNlcnZlciBjb3VsZCBub3QgYmUgcmVhY2hlZC4iOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgdGhpcy5lcnJvck1zZyA9DQogICAgICAgICAgICAgICAgIkVycm9yIGRlbGV0aW5nIGNhcmQuIFJlcXVlc3QgY291bGQgbm90IGJlIGNyZWF0ZWQuIjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KTsNCiAgICAgIH0NCiAgICB9LA0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMucmV0cmlldmVDYXJkKCk7DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgY2FyZCgpIHsNCiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5jYXJkOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["CardDetail.vue"],"names":[],"mappings":";AAyBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CardDetail.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"loading\" v-if=\"isLoading\">\r\n      <img src=\"../assets/ping_pong_loader.gif\" />\r\n    </div>\r\n    <div v-else>\r\n      <h1>{{ card.title }}</h1>\r\n      <p>{{ card.description }}</p>\r\n      <router-link\r\n        tag=\"button\"\r\n        :to=\"{ name: 'EditCard', params: {cardID: $route.params.cardID} }\"\r\n        class=\"btn editCard\"\r\n      >Edit Card</router-link>\r\n      <button class=\"btn deleteCard\" v-on:click=\"deleteCard\">Delete Card</button>\r\n      <div class=\"status-message error\" v-show=\"errorMsg !== ''\">{{errorMsg}}</div>\r\n      <comments-list :comments=\"card.comments\" />\r\n    </div>\r\n\r\n    <div class=\"board-actions\" v-if=\"!isLoading\">\r\n      <router-link :to=\"{ name: 'Board', params: { id: $route.params.boardID } }\">Back to Board</router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport boardsService from \"../services/BoardService\";\r\nimport CommentsList from \"@/components/CommentsList\";\r\n\r\nexport default {\r\n  name: \"card-detail\",\r\n  components: {\r\n    CommentsList\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: true,\r\n      errorMsg: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    retrieveCard() {\r\n      boardsService\r\n        .getCard(this.$route.params.cardID)\r\n        .then(response => {\r\n          this.$store.commit(\"SET_CURRENT_CARD\", response.data);\r\n          this.isLoading = false;\r\n        })\r\n        .catch(error => {\r\n          if (error.response && error.response.status === 404) {\r\n            alert(\r\n              \"Card not available. This card may have been deleted or you have entered an invalid card ID.\"\r\n            );\r\n            this.$router.push(\"/\");\r\n          }\r\n        });\r\n    },\r\n    deleteCard() {\r\n      if (\r\n        confirm(\r\n          \"Are you sure you want to delete this card? This action cannot be undone.\"\r\n        )\r\n      ) {\r\n        boardsService\r\n          .deleteCard(this.card.id)\r\n          .then(response => {\r\n            if (response.status === 200) {\r\n              alert(\"Card successfully deleted\");\r\n              this.$router.push(`/board/${this.card.boardId}`);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            if (error.response) {\r\n              this.errorMsg =\r\n                \"Error deleting card. Response received was '\" +\r\n                error.response.statusText +\r\n                \"'.\";\r\n            } else if (error.request) {\r\n              this.errorMsg =\r\n                \"Error deleting card. Server could not be reached.\";\r\n            } else {\r\n              this.errorMsg =\r\n                \"Error deleting card. Request could not be created.\";\r\n            }\r\n          });\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.retrieveCard();\r\n  },\r\n  computed: {\r\n    card() {\r\n      return this.$store.state.card;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.btn.editCard {\r\n  color: #fff;\r\n  background-color: #508ca8;\r\n  border-color: #508ca8;\r\n  margin-bottom: 10px;\r\n}\r\n.btn.deleteCard {\r\n  color: #fff;\r\n  background-color: #ef031a;\r\n  border-color: #ef031a;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"]}]}