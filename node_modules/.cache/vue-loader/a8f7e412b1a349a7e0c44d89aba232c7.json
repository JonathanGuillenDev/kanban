{"remainingRequest":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jonathan/Documents/GitHub/kanban/src/components/BoardsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Jonathan/Documents/GitHub/kanban/src/components/BoardsList.vue","mtime":1617676642000},{"path":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Documents/GitHub/kanban/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBib2FyZHNTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL0JvYXJkU2VydmljZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzTG9hZGluZzogdHJ1ZSwKICAgICAgc2hvd0FkZEJvYXJkOiBmYWxzZSwKICAgICAgbmV3Qm9hcmQ6IHsKICAgICAgICB0aXRsZTogIiIsCiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGlzLnJhbmRvbUJhY2tncm91bmRDb2xvcigpLAogICAgICB9LAogICAgICBlcnJvck1zZzogIiIsCiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMucmV0cmlldmVCb2FyZHMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJldHJpZXZlQm9hcmRzKCkgewogICAgICBib2FyZHNTZXJ2aWNlLmdldEJvYXJkcygpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJTRVRfQk9BUkRTIiwgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgaWYgKAogICAgICAgICAgdGhpcy4kcm91dGUubmFtZSA9PSAiSG9tZSIgJiYKICAgICAgICAgIHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwICYmCiAgICAgICAgICByZXNwb25zZS5kYXRhLmxlbmd0aCA+IDAKICAgICAgICApIHsKICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAvYm9hcmQvJHtyZXNwb25zZS5kYXRhWzBdLmlkfWApOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgc2F2ZU5ld0JvYXJkKCkgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGJvYXJkc1NlcnZpY2UKICAgICAgICAuYWRkQm9hcmQodGhpcy5uZXdCb2FyZCkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMSkgewogICAgICAgICAgICB0aGlzLnJldHJpZXZlQm9hcmRzKCk7CiAgICAgICAgICAgIHRoaXMuc2hvd0FkZEJvYXJkID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMubmV3Qm9hcmQgPSB7CiAgICAgICAgICAgICAgdGl0bGU6ICIiLAogICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy5yYW5kb21CYWNrZ3JvdW5kQ29sb3IoKSwKICAgICAgICAgICAgfTsKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuaXNMb2FkaW5nPWZhbHNlOwoKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgIGlmIChlcnJvci5yZXNwb25zZSl7IC8vcmVhY2hlZCB0aGUgc2VydmVyIGJ1dCByZXR1cm5lZCBhbiBlcnJvcgogICAgICAgICAgICB0aGlzLmVycm9yTXNnID0gIkVycm9yIGFkZGluZyBuZXcgYm9hcmQuIFJlc3BvbnNlIHdhcyAiK2Vycm9yLnJlc3BvbnNlLnN0YXR1c1RleHQ7CiAgICAgICAgICB9IGVsc2UgaWYgKGVycm9yLnJlcXVlc3Qpey8vd2Ugc3VjY2Vzc2Z1bGx5IGNyZWF0ZWQgdGhlIHJlcXVlc3QgYnV0IGRpZG4ndCByZWFjaCB0aGUgc2VydmVyCiAgICAgICAgICAgIHRoaXMuZXJyb3JNc2cgPSAiRXJyb3IgYWRkaW5nIG5ldyBib2FyZC4gVW5yZWFjaGFibGUgc2VydmVyIjsKICAgICAgICAgIH0gZWxzZSB7IC8vdGhlIHJlcXVlc3Qgd2Fzbid0IGNyZWF0ZWQKICAgICAgICAgICAgdGhpcy5lcnJvck1zZz0iRXJyb3IgYWRkaW5nIGJvYXJkLiBDb3VsZCBub3QgY3JlYXRlIHJlcXVlc3QuIgogICAgICAgICAgfQogICAgICAgICAgdGhpcy5pc0xvYWRpbmc9ZmFsc2U7CiAgICAgICAgfSk7CiAgICAgICAgLy9jb2RlIGhlcmUgd2lsbCBleGVjdXRlIHByb2JhYmx5IGJlZm9yZSB0aGUgdGhlbiBhbmQgY2F0Y2ggY29kZQogICAgfSwKICAgIHJhbmRvbUJhY2tncm91bmRDb2xvcigpIHsKICAgICAgcmV0dXJuICIjIiArIHRoaXMuZ2VuZXJhdGVIZXhDb2RlKCk7CiAgICB9LAogICAgZ2VuZXJhdGVIZXhDb2RlKCkgewogICAgICB2YXIgYmcgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxNjc3NzIxNSkudG9TdHJpbmcoMTYpOwogICAgICBpZiAoYmcubGVuZ3RoICE9PSA2KSBiZyA9IHRoaXMuZ2VuZXJhdGVIZXhDb2RlKCk7CiAgICAgIHJldHVybiBiZzsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["BoardsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BoardsList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"sideNav\">\n    <h1>My Kanban Boards</h1>\n    <div class=\"boards\">\n      <div class=\"status-message error\" v-show=\"errorMsg !== ''\">\n        {{ errorMsg }}\n      </div>\n      <div class=\"loading\" v-if=\"isLoading\">\n        <img src=\"../assets/ping_pong_loader.gif\" />\n      </div>\n      <router-link\n        v-bind:to=\"{ name: 'Board', params: { id: board.id } }\"\n        class=\"board\"\n        v-for=\"board in this.$store.state.boards\"\n        v-bind:key=\"board.id\"\n        v-bind:style=\"{ 'background-color': board.backgroundColor }\"\n        v-else\n        tag=\"div\"\n      >\n        {{ board.title }}\n      </router-link>\n      <button\n        class=\"btn addBoard\"\n        v-if=\"!isLoading && !showAddBoard\"\n        v-on:click=\"showAddBoard = !showAddBoard\"\n      >\n        Add Board\n      </button>\n      <form v-if=\"showAddBoard\">\n        Board Title:\n        <input type=\"text\" class=\"form-control\" v-model=\"newBoard.title\" />\n        Background Color:\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          v-model=\"newBoard.backgroundColor\"\n        />\n        <button class=\"btn btn-submit\" v-on:click=\"saveNewBoard\">Save</button>\n        <button\n          class=\"btn btn-cancel\"\n          v-on:click=\"showAddBoard = !showAddBoard\"\n        >\n          Cancel\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport boardsService from \"../services/BoardService\";\n\nexport default {\n  data() {\n    return {\n      isLoading: true,\n      showAddBoard: false,\n      newBoard: {\n        title: \"\",\n        backgroundColor: this.randomBackgroundColor(),\n      },\n      errorMsg: \"\",\n    };\n  },\n  created() {\n    this.retrieveBoards();\n  },\n  methods: {\n    retrieveBoards() {\n      boardsService.getBoards().then((response) => {\n        this.$store.commit(\"SET_BOARDS\", response.data);\n        this.isLoading = false;\n\n        if (\n          this.$route.name == \"Home\" &&\n          response.status === 200 &&\n          response.data.length > 0\n        ) {\n          this.$router.push(`/board/${response.data[0].id}`);\n        }\n      });\n    },\n    saveNewBoard() {\n      this.isLoading = true;\n      boardsService\n        .addBoard(this.newBoard)\n        .then((response) => {\n          if (response.status === 201) {\n            this.retrieveBoards();\n            this.showAddBoard = false;\n            this.newBoard = {\n              title: \"\",\n              backgroundColor: this.randomBackgroundColor(),\n            };\n          }\n          this.isLoading=false;\n\n        })\n        .catch((error) => {\n          if (error.response){ //reached the server but returned an error\n            this.errorMsg = \"Error adding new board. Response was \"+error.response.statusText;\n          } else if (error.request){//we successfully created the request but didn't reach the server\n            this.errorMsg = \"Error adding new board. Unreachable server\";\n          } else { //the request wasn't created\n            this.errorMsg=\"Error adding board. Could not create request.\"\n          }\n          this.isLoading=false;\n        });\n        //code here will execute probably before the then and catch code\n    },\n    randomBackgroundColor() {\n      return \"#\" + this.generateHexCode();\n    },\n    generateHexCode() {\n      var bg = Math.floor(Math.random() * 16777215).toString(16);\n      if (bg.length !== 6) bg = this.generateHexCode();\n      return bg;\n    },\n  },\n};\n</script>\n\n<style scoped>\ndiv#sideNav {\n  height: 100%;\n  width: 20%;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  overflow-x: hidden;\n  border-right: solid lightgrey 1px;\n}\n\nh1 {\n  text-align: center;\n}\n\n.boards {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n}\n.board {\n  color: #f7fafc;\n  border-radius: 10px;\n  padding: 40px;\n  flex: 1;\n  margin: 10px;\n  text-align: center;\n  cursor: pointer;\n  width: 60%;\n}\n.addBoard {\n  color: #f7fafc;\n  border-radius: 10px;\n  background-color: #28a745;\n  font-size: 16px;\n  width: 60%;\n  margin: 10px;\n  padding: 20px;\n  cursor: pointer;\n}\n.form-control {\n  margin-bottom: 10px;\n}\n.btn {\n  margin-bottom: 35px;\n}\n.loading {\n  flex: 3;\n}\n.board:hover:not(.router-link-active),\n.addBoard:hover {\n  font-weight: bold;\n}\n.router-link-active {\n  font-weight: bold;\n  border: solid blue 5px;\n}\n</style>\n"]}]}